CREATE TABLE IF NOT EXISTS users (user_id INT NOT NULL AUTO_INCREMENT, user_name VARCHAR(50) UNIQUE NOT NULL, user_password VARCHAR(200) NOT NULL, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, user_picture VARCHAR(8000), preference_one VARCHAR(50), preference_two VARCHAR(50), preference_three VARCHAR(50), PRIMARY KEY (user_id)) AUTO_INCREMENT = 100;
CREATE TABLE IF NOT EXISTS recipes (recipe_id INT NOT NULL AUTO_INCREMENT, user_id INT NOT NULL, dish_name VARCHAR(200) NOT NULL, cuisine VARCHAR(200) NOT NULL, cook_time INT NOT NULL, ingredients VARCHAR(5000) NOT NULL, instructions VARCHAR(5000) NOT NULL, calories INT NOT NULL, meal_type VARCHAR(200), health_label VARCHAR(200), health_score INT DEFAULT 0, servings INT DEFAULT 1, recipe_picture VARCHAR(5000), date_created DATETIME DEFAULT CURRENT_TIMESTAMP, date_modified DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (recipe_id), FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE) AUTO_INCREMENT = 200; 
CREATE TABLE IF NOT EXISTS likes (like_id INT NOT NULL AUTO_INCREMENT, recipe_id INT NOT NULL, user_id INT NOT NULL, date_created DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (like_id, recipe_id, user_id), FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id) ON DELETE CASCADE, FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE) AUTO_INCREMENT = 300;
CREATE TABLE IF NOT EXISTS comments (comment_id INT NOT NULL AUTO_INCREMENT,recipe_id INT NOT NULL,user_id INT NOT NULL,content VARCHAR(144) NOT NULL, date_created DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (comment_id, recipe_id, user_id),FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id) ON DELETE CASCADE,FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE) AUTO_INCREMENT = 400;
CREATE TABLE IF NOT EXISTS favourites (favourite_id INT NOT NULL AUTO_INCREMENT,recipe_id INT NOT NULL,user_id INT NOT NULL,date_created DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (favourite_id, recipe_id, user_id),FOREIGN KEY (recipe_id) REFERENCES recipes(recipe_id) ON DELETE CASCADE,FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE) AUTO_INCREMENT = 500;
CREATE VIEW publicUserInfo AS SELECT user_id, user_name, first_name, last_name, preference_one, preference_two, preference_three, user_picture FROM recipe_db.users;
CREATE INDEX custom_recipes ON recipes (cuisine, health_label, meal_type);